@{
    ViewBag.Title = "Testing Page";
}

<div id="Demo">

</div>

@section scripts{
    <script type="text/babel">
        class LifeCycle_Parent extends React.Component{

            state = {
                childval:"value"
            }

            render(){
                return(
                    <div>
                        <h1>LifeCycle_Parent</h1>
                        <LifeCycle child={this.state.childval} />
                    <div>
                )
            }
        }
        //Life Cycle of React Component
         //mount
         //unmount
         class LifeCycle extends React.Component{
            constructor(props){
                super(props)
                console.log("constructor")
            }

            state = {
                sum:0,
            }
            static getDerivedStateFromProps(){
                console.log("getDerivedStateFromProps")
            }
            add = ()=>{
                const {sum} = this.state
                this.setState({sum:sum+1})
            }
            death = ()=>{
                 console.log("death")
                 ReactDOM.unmountComponentAtNode(document.getElementById("Demo"))
                 console.log("death")
            }

            //只調一次 built-in 通過 LifeCycle instance call
            //組件完成掛載完畢調用
            componentDidMount(){
                console.log("componentDidMount")
            }
            componentWillUnmount(){
                console.log("WillUnmount")
                //清除定時器
                clearInterval(this.timer)
            }

            //setState() 往下走 或 父組件render時
            shouldComponentUpdate(){
                console.log("shouldComponentUpdate")
            }
            componentWillUpdate(){
                console.log("componentWillUpdate")
            }

            componentDidUpdate(){
                console.log("componentDidUpdate")
            }

            render (){
                  console.log("render")
                  return (
                         <div>
                             <h2>{this.state.sum}</h2>
                             <button onClick={this.death}>Hell is waiting</button>
                             <button onClick={this.add}>Add</button>
                         </div>
                  )
              }

          }
          ReactDOM.render(<LifeCycle_Parent/>,document.getElementById('Demo'))

    </script>
}