@{
    ViewBag.Title = "Testing Page";
}

<div id="Demo">

</div>

@section scripts{
    <script type="text/babel">

        class LifeCycle extends React.Component{
                    constructor(props){
                        super(props)
                        console.log("constructor")
                    }

                  state={
                      sum:0
                  }
                  
                  static getDerivedStateFromProps(props,state){
                      console.log("getDerivedStateFromProps")
                      return null
                  }

                  add = ()=>{
                      const {sum} = this.state
                      this.setState({sum:sum+1})
                  }
                  death = ()=>{
                       console.log("death")
                       ReactDOM.unmountComponentAtNode(document.getElementById("Demo"))
                       console.log("death")
                  }


                  componentDidMount(){
                      console.log("componentDidMount")
                  }
                  componentWillUnmount(){
                      console.log("WillUnmount")
                      //清除定時器
                      clearInterval(this.timer)
                  }

                  //setState() 往下走 或 父組件render時
                  shouldComponentUpdate(){
                      console.log("shouldComponentUpdate")
                       return true
                  }
                  componentWillUpdate(){
                      console.log("componentWillUpdate")
                  }

                  getSnapshotBeforeUpdate(){
                      console.log("getSnapShot")
                      return "snapShotValue"
                  }

                  componentDidUpdate(prePorps,preState,snapShot){
                      console.log("componentDidUpdate ",prePorps,preState,snapShot)
                  }

                  render(){
                        console.log("render")
                        return (
                               <div>
                                   <h2>{this.state.sum}</h2>
                                   <button onClick={this.death}>Hell is waiting</button>
                                   <button onClick={this.add}>Add</button>
                               </div>
                        )
                    }

                }
                ReactDOM.render(<LifeCycle sum={300} />,document.getElementById('Demo'))

    </script>
}